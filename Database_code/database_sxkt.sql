-- MySQL Script generated by MySQL Workbench
-- Tue Dec 26 22:01:19 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema sxktdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sxktdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sxktdb` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `sxktdb` ;

-- -----------------------------------------------------
-- Table `sxktdb`.`tblcustomer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sxktdb`.`tblcustomer` ;

CREATE TABLE IF NOT EXISTS `sxktdb`.`tblcustomer` (
  `cusid` INT NOT NULL AUTO_INCREMENT,
  `name_` VARCHAR(120) NOT NULL,
  `phonenumber` VARCHAR(45) NOT NULL,
  `address_` VARCHAR(120) NOT NULL,
  `dateofbirth` DATETIME NOT NULL,
  `lastlog` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`cusid`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;


-- -----------------------------------------------------
-- Table `sxktdb`.`tbllotdata`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sxktdb`.`tbllotdata` ;

CREATE TABLE IF NOT EXISTS `sxktdb`.`tbllotdata` (
  `dataid` INT NOT NULL AUTO_INCREMENT,
  `lotnum` INT NOT NULL,
  `session_` INT NOT NULL,
  `datelot` DATE NOT NULL,
  `lastedit` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`dataid`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;


-- -----------------------------------------------------
-- Table `sxktdb`.`tblticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sxktdb`.`tblticket` ;

CREATE TABLE IF NOT EXISTS `sxktdb`.`tblticket` (
  `tickid` INT NOT NULL AUTO_INCREMENT,
  `lot_num` INT NOT NULL,
  `cusid` INT NOT NULL,
  `session_` INT NOT NULL,
  `datelot` DATE NOT NULL,
  `ismatch` INT NOT NULL DEFAULT '-1',
  `lastedit` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`tickid`),
  INDEX `fk_tblcustomer_idx` (`cusid` ASC) VISIBLE,
  CONSTRAINT `fk_tblcustomer`
    FOREIGN KEY (`cusid`)
    REFERENCES `sxktdb`.`tblcustomer` (`cusid`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

USE `sxktdb` ;

-- -----------------------------------------------------
-- function fn_checkdatalot
-- -----------------------------------------------------

USE `sxktdb`;
DROP function IF EXISTS `sxktdb`.`fn_checkdatalot`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `fn_checkdatalot`(
	 _sesssion_ int, datedata_ datetime, _lotnum_ int, ismatch_ int
) RETURNS int
    READS SQL DATA
BEGIN
	declare lotnum_ int;
    declare rs int;
    if ismatch_<>-1
    then
		return ismatch_;
    end if;    
    set rs=-1;
    set lotnum_=-2;    
	select lotnum into lotnum_ from tbllotdata where session_=_sesssion_ and date(datelot)=date(datedata_) limit 1;
    if lotnum_>=0
    then
		if lotnum_=_lotnum_
        then
			 set rs=1;
        else
			 set rs=0;
        end if;
    end if;
RETURN rs;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_create_customer
-- -----------------------------------------------------

USE `sxktdb`;
DROP procedure IF EXISTS `sxktdb`.`sp_create_customer`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_create_customer`(
	in _name_ varchar(120),
    in phonenumber_ varchar(45),
    in _address_ varchar(120),
    in dateofbirth_ datetime  
)
regis:BEGIN
	declare cusid_ int;
    select cusid into cusid_ from tblcustomer where phonenumber=phonenumber_  limit 1;
	if(cusid_>0) then
		select -1;
        leave regis;
    end if;
    select max(cusid) into cusid_ from tblcustomer limit 1;
    set cusid_=if(cusid_>0, cusid_+1, 1);
    insert into tblcustomer 
    (cusid,name_,phonenumber,address_,dateofbirth) 
    value (cusid_,_name_,phonenumber_,_address_,dateofbirth_);
	select cusid_;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_create_tblticket
-- -----------------------------------------------------

USE `sxktdb`;
DROP procedure IF EXISTS `sxktdb`.`sp_create_tblticket`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_create_tblticket`(
	in lot_num_ int,
    in cusid_ int,
    in _session_ int,
    in datelot_ datetime
    
)
createTick:BEGIN
	declare tickid_ int;
    select tickid into tickid_ from tblticket where cusid=cusid_ and session_=_session_ and date(datelot)=date(datelot_) limit 1;
    if tickid_>0
    then
		select -1;
        leave createTick;
    end if;
    
    select max(tickid) into tickid_ from tblticket limit 1;
    set tickid_=if(tickid_>0,(tickid_+1),1);
    insert into tblticket (tickid,lot_num,cusid,session_,datelot) value (tickid_,lot_num_,cusid_,_session_,datelot_);
    select tickid_;
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_get_all_customer
-- -----------------------------------------------------

USE `sxktdb`;
DROP procedure IF EXISTS `sxktdb`.`sp_get_all_customer`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_all_customer`()
BEGIN
select * from tblcustomer;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_get_all_ticket_by_cusid
-- -----------------------------------------------------

USE `sxktdb`;
DROP procedure IF EXISTS `sxktdb`.`sp_get_all_ticket_by_cusid`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_all_ticket_by_cusid`(
	in cusid_ int
)
BEGIN
	select t.tickid,t.lot_num, t.cusid,t.session_,t.datelot,
    t.ismatch,t.lastedit, fn_checkdatalot(t.session_,t.datelot,t.lot_num,t.ismatch) as 'isCheck' from tblticket t where t.cusid=cusid_;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_get_customer_by_phone
-- -----------------------------------------------------

USE `sxktdb`;
DROP procedure IF EXISTS `sxktdb`.`sp_get_customer_by_phone`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_customer_by_phone`(
	in phone_ varchar(20)
)
BEGIN
	declare cusid_ int;    
    select cus.cusid into cusid_ from tblcustomer cus 
    where cus.phonenumber=phone_ limit 1;
if	cusid_>0
then
	update tblcustomer set lastlog=now() where cusid=cusid_ limit 1;
    
    select cus.cusid,cus.name_, cus.phonenumber,cus.address_,cus.dateofbirth, 
cus.lastlog from tblcustomer cus where cus.cusid=cusid_ limit 1;
else
	select null;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insert_tbllotdata
-- -----------------------------------------------------

USE `sxktdb`;
DROP procedure IF EXISTS `sxktdb`.`sp_insert_tbllotdata`;

DELIMITER $$
USE `sxktdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_tbllotdata`(
	in lotnum_ int,
    in _session_ int,
    in datelot_ datetime
    
)
insertdata:BEGIN
	declare dataid_ int;
    select dataid into dataid_ from tbllotdata where session_=_session_ and date(datelot)=date(datelot_) limit 1;
    if dataid_>0
    then
		select -1;
        leave insertdata;
    end if;
    select max(dataid) into dataid_ from tbllotdata limit 1;
    set dataid_=if(dataid_ >0,(dataid_+1),1);
    insert into tbllotdata (dataid,lotnum,session_,datelot) value (dataid_,lotnum_,_session_,datelot_);
    select dataid_;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
